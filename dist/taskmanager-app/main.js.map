{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/addproject/addproject-routing.module.ts","webpack:///./src/app/addproject/addproject.component.css","webpack:///./src/app/addproject/addproject.component.html","webpack:///./src/app/addproject/addproject.component.ts","webpack:///./src/app/addproject/addproject.module.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/commonutils.module.ts","webpack:///./src/app/env/env.config.ts","webpack:///./src/app/env/index.ts","webpack:///./src/app/pipes/searchtask.ts","webpack:///./src/app/service/app.service.ts","webpack:///./src/app/service/index.ts","webpack:///./src/app/updatetask/updatetask-routing.module.ts","webpack:///./src/app/updatetask/updatetask.component.css","webpack:///./src/app/updatetask/updatetask.component.html","webpack:///./src/app/updatetask/updatetask.component.ts","webpack:///./src/app/updatetask/updatetask.module.ts","webpack:///./src/app/userlist/add-user.component.html","webpack:///./src/app/userlist/add-user.component.ts","webpack:///./src/app/userlist/user-list.component.html","webpack:///./src/app/userlist/user-list.component.ts","webpack:///./src/app/userlist/user-routing.module.ts","webpack:///./src/app/userlist/user.module.ts","webpack:///./src/app/viewtasklist/viewtask-routing.module.ts","webpack:///./src/app/viewtasklist/viewtask.component.css","webpack:///./src/app/viewtasklist/viewtask.component.html","webpack:///./src/app/viewtasklist/viewtask.component.ts","webpack:///./src/app/viewtasklist/viewtask.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AddprojectComponent } from './addproject.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild([      \r\n      { path: 'addproject', component: AddprojectComponent }\r\n    ])\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AddProjectRoutingModule { }","module.exports = \"\"","module.exports = \"<div class=\\\"row my-3 p-3 bg-white rounded box-shadow\\\">\\n    <div class=\\\"col-xs-12 col-sm-2 col-md-2\\\"></div>\\n    <div class=\\\"col-xs-12 col-sm-8 col-md-8\\\">\\n      <form #addprojectForm=\\\"ngForm\\\" method=\\\"post\\\" (ngSubmit)=\\\"addproject()\\\" novalidate >\\n        <div class=\\\"form-group row\\\">\\n          <label for=\\\"projectName\\\" class=\\\"col-sm-2 col-form-label\\\">Project</label>\\n            <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"projectName\\\" maxlength=\\\"50\\\" required name=\\\"projectName\\\" placeholder=\\\"Enter the Project Name\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"form-group row\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"col-sm-5 col-form-label\\\"/>\\n          <label for=\\\"setdate\\\" class=\\\"pl-0\\\"> Set Start and End Date </label>                \\n          <div class=\\\"form-group col-xs-12 col-sm-3 col-md-3\\\">\\n              <label for=\\\"startDate\\\">Start Date</label>\\n              <div class=\\\"input-group\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"dd/mm/yyyy\\\" id=\\\"startDate\\\" [readonly]=\\\"true\\\"\\n                          name=\\\"startDate\\\" [(ngModel)]=\\\"task.startDate\\\" ngbDatepicker #startDate=\\\"ngbDatepicker\\\" (dateSelect)=\\\"onDateSelectPicker($event,'start')\\\"/>\\n                  <div class=\\\"input-group-append\\\">\\n                      <button class=\\\"btn btn-outline-secondary fa fa-calendar\\\" (click)=\\\"startDate.toggle()\\\" type=\\\"button\\\"></button>\\n                  </div>\\n              </div>\\n          </div>\\n          <div class=\\\"form-group col-xs-12 col-sm-3 col-md-3\\\">\\n              <label for=\\\"endDate\\\">End Date</label>\\n              <div class=\\\"input-group\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"dd/mm/yyyy\\\" id=\\\"endDate\\\" [readonly]=\\\"true\\\"\\n                          name=\\\"endDate\\\" [(ngModel)]=\\\"task.endDate\\\" ngbDatepicker #endDate=\\\"ngbDatepicker\\\" (dateSelect)=\\\"onDateSelectPicker($event,'end')\\\"/>\\n                  <div class=\\\"input-group-append\\\">\\n                      <button class=\\\"btn btn-outline-secondary fa fa-calendar\\\" (click)=\\\"endDate.toggle()\\\" type=\\\"button\\\"></button>\\n                  </div>\\n              </div>\\n          </div>\\n        </div>\\n  \\n        <div class=\\\"form-group row\\\">\\n            <label for=\\\"priority\\\" class=\\\"col-sm-2 col-form-label\\\">Priority</label>\\n            <div class=\\\"col-sm-9\\\">\\n                <div class=\\\"pt-2\\\">\\n                        <input type=\\\"range\\\" min=\\\"1\\\" max=\\\"30\\\" name=\\\"priority\\\" #priority=\\\"ngModel\\\" [(ngModel)]=\\\"task.priority\\\" class=\\\"slider\\\" id=\\\"priority\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"col-sm-1\\\">\\n                <div class=\\\"pt-2\\\">\\n                    {{task.priority}}\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group row\\\">\\n            <label for=\\\"projectmanager\\\" class=\\\"col-sm-2 col-form-label\\\">Manager</label>\\n            <div class=\\\"col-sm-10\\\">\\n                <input id=\\\"projectmanager\\\" type=\\\"text\\\" class=\\\"w-75 form-control\\\" name=\\\"projectmanagerId\\\" [ngModel]=\\\"task.parentTaskName\\\"\\n                placeholder=\\\"Select a Manager\\\"/>\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success mx-3 mt-2\\\" data-toggle=\\\"modal\\\" \\n                (click)=\\\"openmodal()\\\" data-target=\\\"#searchmodal\\\">Search</button>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group row\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success mx-3\\\">Add Project</button>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success mx-3\\\">Reset</button>\\n        </div>\\n  \\n        <div class=\\\"border-bottom border-dark\\\"></div>\\n  \\n        <div class=\\\"modal fade\\\" role=\\\"dialog\\\" id=\\\"searchmodal\\\" tabindex=\\\"-1\\\">\\n            <div class=\\\"modal-dialog\\\">\\n              <div class=\\\"modal-content\\\">\\n                <!-- Modal Header -->\\n                <div class=\\\"modal-header\\\">\\n                  <h4 class=\\\"modal-title\\\">{{modalHeading}}</h4>\\n                  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                </div>\\n                <!-- Modal body -->\\n                <div class=\\\"modal-body\\\">\\n                  <h4>{{modalBody}}</h4>\\n                  <ul>\\n                    <li *ngFor=\\\"let user of users\\\">\\n                        <span class=\\\"badge\\\">{{user.name}}</span>\\n                    </li>\\n                  </ul>                \\n                </div>\\n                <!-- Modal footer -->\\n                <div class=\\\"modal-footer\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" *ngIf=\\\"flow === 'addtask'\\\" data-dismiss=\\\"modal\\\" (click)=resetButton()>Back To Add Task</button>\\n                  <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=viewTaskScreen()>Navigate to View Task</button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n      </form>\\n    </div>\\n</div>\\n\\n<div class=\\\"row my-3 p-3 bg-white rounded box-shadow\\\">\\n    <div class=\\\"col-xs-12 col-sm-2 col-md-2\\\"></div>\\n    <div class=\\\"col-md-12\\\">\\n        <form #viewprojectForm=\\\"ngForm\\\" method=\\\"get\\\" novalidate >\\n            <div class=\\\"form-group row\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"projectName\\\" maxlength=\\\"50\\\" name=\\\"projectName\\\" \\n                    #projectName=\\\"ngModel\\\" [(ngModel)]=\\\"task.taskName\\\" placeholder=\\\"Search...\\\">\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n                <label for=\\\"sortby\\\" class=\\\"col-sm-2 col-form-label\\\">Sort by:</label>\\n                <button type=\\\"submit\\\" class=\\\"btn mx-3\\\" >Start date</button>\\n                <button type=\\\"submit\\\" class=\\\"btn mx-3\\\" >End date</button>\\n                <button type=\\\"submit\\\" class=\\\"btn mx-3\\\" >Priority</button>\\n                <button type=\\\"submit\\\" class=\\\"btn mx-3\\\" >Completed</button>\\n            </div>\\n\\n            <div>\\n                <div class=\\\"row my-3 p-3 bg-black rounded box-shadow\\\">\\n                    <label for=\\\"Project\\\" class=\\\"col-sm-2 col-form-label\\\">Project:</label>\\n                    <label for=\\\"No of tasks\\\" class=\\\"col-sm-2 col-form-label\\\">No of tasks:</label>\\n                    <label for=\\\"Completed\\\" class=\\\"col-sm-2 col-form-label\\\">Completed:</label>\\n                    <br/>\\n                    <br/>\\n                    <label for=\\\"Start date\\\" class=\\\"col-sm-2 col-form-label\\\">Start date:</label>\\n                    <label for=\\\"End date\\\" class=\\\"col-sm-2 col-form-label\\\">End date:</label>\\n                    <label for=\\\"Priority\\\" class=\\\"col-sm-2 col-form-label\\\">Priority:</label>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-addproject',\n  templateUrl: './addproject.component.html',\n  styleUrls: ['./addproject.component.css']\n})\nexport class AddprojectComponent implements OnInit {\n\n  modalHeading : string = '';\n  modalBody : string = '';\n  task : any = {};\n  users: any = [];\n\n  constructor() {\n    //this.modalHeading = \"Users/managers\";\n    //this.modalBody = \"list will be update soon\";  \n   }\n\n  ngOnInit() {\n  }\n\n  openmodal(){\n    this.modalHeading = \"Users/managers\";\n    this.modalBody = \"Users/managers list\";\n\n    this.users = [{\n      id: 1,\n      name: \"john\"\n    },\n    {\n      id: 2,\n      name: \"matt\"\n    },\n    {\n      id: 3,\n      name: \"jessy\"\n    }]\n  };\n\n  // jquery(\"#searchmodal\").on(\"hidden.bs.modal\", function(e){\n  //   var value = this.jquery(\"#myPopupInput\").val();\n  //   this.jquery(\"#myMainPageInput\").val(value);\n  // });\n\n  onDateSelectPicker(date: NgbDate, field: string){\n    if(field === 'start'){\n      //this.task.startDate = this.convertDateJsonToString(this.task.startDate);\n      setTimeout(()=>{\n        //jQuery(\"#startDate\").val(this.task.startDate);\n      },50);\n    }else if(field === 'end'){\n      //this.task.endDate = this.convertDateJsonToString(this.task.endDate);\n      setTimeout(()=>{\n        //jQuery(\"#endDate\").val(this.task.endDate);\n      },50);\n    }\n  }\n\n  convertDateJsonToString(json: any){\n    if(json !== undefined && json !== null){\n      return json.day + '/' + json.month + '/' + json.year;\n    }\n  }\n\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { appService } from '../service'; \r\nimport { AddprojectComponent } from './addproject.component';\r\nimport { AddProjectRoutingModule } from './addproject-routing.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgbModal, NgbModule, NgbTypeaheadModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { HttpClientModule } from '@angular/common/http'; \r\nimport { HttpModule } from '@angular/http';\r\n//import { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\n@NgModule({\r\n  imports: [AddProjectRoutingModule, FormsModule, CommonModule, NgbModule.forRoot(), NgbTypeaheadModule.forRoot()],\r\n  declarations: [AddprojectComponent],\r\n  exports: [AddprojectComponent, FormsModule],\r\n  providers: [appService]\r\n})\r\n\r\nexport class AddProjectModule { \r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot([\r\n\r\n    ])\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n\r\n","module.exports = \".d-flex .active-nav{\\r\\n  color: #17a2b8!important;\\r\\n}\"","module.exports = \"<div class=\\\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom box-shadow flex-nowrap justify-content-between align-items-center\\\">\\r\\n  <div class=\\\"col-4 pt-1\\\"></div>\\r\\n  <div class=\\\"col-4 text-center\\\">\\r\\n    <h3 class=\\\"my-0 mr-md-auto text-secondary\\\">Task Manager</h3>\\r\\n  </div>\\r\\n  <div class=\\\"col-4 pt-1\\\"></div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n\\r\\n  <div class=\\\"nav-scroller py-1 mb-2\\\">\\r\\n    <nav class=\\\"nav d-flex ml-auto text-center\\\"> \\r\\n\\t\\t\\t\\t<div class=\\\"col-2 pt-1\\\"></div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-8 text-center\\\">\\r\\n            <a class=\\\"h5 p-2 text-center text-muted navig active-nav\\\" id=\\\"add-project\\\" href=\\\"javascript:void(0);\\\" (click)=addProject()>Add Project</a>\\r\\n\\t\\t\\t\\t\\t\\t<a class=\\\"h5 p-2 text-center text-muted navig active-nav\\\" id=\\\"add-task\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"addTask()\\\">Add Task</a>\\r\\n\\t\\t\\t\\t\\t\\t<a class=\\\"h5 p-2 text-center text-muted navig active-nav\\\" id=\\\"add-user\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"addUser()\\\">Add User</a>\\r\\n\\t\\t\\t\\t\\t\\t<a class=\\\"h5 p-2 text-center text-muted navig\\\" id=\\\"view-task\\\" href=\\\"javascript:void(0);\\\" (click)=viewTask()>View Task</a>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-2 pt-1\\\"></div>\\r\\n    </nav>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<main role=\\\"main\\\" class=\\\"container\\\">\\r\\n    <router-outlet (activate)=\\\"onActivate($event, outlet)\\\" #outlet></router-outlet>\\r\\n</main>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params} from '@angular/router';\r\nimport { appService } from './service';\r\ndeclare var jQuery:any;\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit{\r\n  onActivate(e:any, outlet:any){\r\n    window.scrollTo(0,0);\r\n  }\r\n  \r\n  constructor(public router: Router, private activatedRoute: ActivatedRoute, private appService : appService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.appService.updatetask = null;\r\n  }\r\n\r\n  addTask(){\r\n    this.appService.updatetask = null;\r\n    jQuery(\".navig\").removeClass('active-nav');\r\n    jQuery(\"#add-task\").addClass('active-nav');\r\n    this.router.navigate(['/addtask']);\r\n  }\r\n\r\n  addUser(): void {\r\n    this.router.navigate(['/adduser']);\r\n  }\r\n\r\n  viewTask(){\r\n    this.appService.updatetask = null;\r\n    jQuery(\".navig\").removeClass('active-nav');\r\n    jQuery(\"#view-task\").addClass('active-nav');\r\n    this.router.navigate(['/viewtask']);\r\n  }\r\n\r\n  addProject(){\r\n    this.appService.updatetask = null;\r\n    jQuery(\".navig\").removeClass('active-nav');\r\n    jQuery(\"#add-project\").addClass('active-nav');\r\n    this.router.navigate(['/addproject']);\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AppComponent } from './app.component'; \r\nimport { UpdateTaskModule } from './updatetask/updatetask.module'; \r\nimport { ViewTaskModule } from './viewtasklist/viewtask.module';\r\nimport { RequestOptions, RequestMethod, Headers } from '@angular/http';\r\nimport { AppRoutingModule } from './app-routing.module'; \r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgbModal, NgbModule, NgbTypeaheadModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { appService } from './service/index';\r\nimport { HttpClientModule } from '@angular/common/http'; \r\nimport { HttpModule } from '@angular/http';\r\nimport { CommonutilsModule } from './commonutils.module';\r\nimport { UserModule } from './userlist/user.module';\r\nimport { AddProjectModule } from './addproject/addproject.module';\r\n\r\nexport class MyOptions extends RequestOptions {\r\n  constructor() {\r\n    super({\r\n      method: RequestMethod.Get,\r\n      headers: new Headers({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    });\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule, AppRoutingModule, UpdateTaskModule, UserModule, ViewTaskModule, AddProjectModule, HttpModule, HttpClientModule, NgbModule.forRoot(), NgbTypeaheadModule.forRoot(), CommonutilsModule.forRoot()\r\n  ],\r\n  exports: [\r\n    \r\n  ],\r\n  providers: [\r\n    {\r\n    provide: RequestOptions,\r\n    useClass: MyOptions\r\n    },\r\n    appService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule{ }\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { TaskSearchPipe } from './pipes/searchtask';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, FormsModule],\r\n  declarations: [TaskSearchPipe],\r\n  exports: [CommonModule, FormsModule, RouterModule, TaskSearchPipe],\r\n  providers: [TaskSearchPipe]\r\n})\r\nexport class CommonutilsModule {\r\n\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: CommonutilsModule,      \r\n    };\r\n  }\r\n\r\n  \r\n}\r\n","import { environment } from '../../environments/environment';\r\n\r\nexport const Config = environment;\r\n\r\n","export * from './env.config';","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'taskSearchPipe', pure: false})\r\nexport class TaskSearchPipe implements PipeTransform{\r\n    transform(items: Array<any>, filtertask : any){\r\n        if (items && items.length){\r\n            return items.filter(item =>{\r\n                if (filtertask.taskName && item.taskName.toLowerCase().indexOf(filtertask.taskName.toLowerCase()) === -1){\r\n                    return false;\r\n                }\r\n                if (filtertask.parentTaskName && item.parentTask && item.parentTask.parentTaskName &&\r\n                    item.parentTask.parentTaskName.toLowerCase().indexOf(filtertask.parentTaskName.toLowerCase()) === -1){\r\n                    return false;\r\n                }\r\n                if (filtertask.parentTaskName !== undefined && filtertask.parentTaskName !== null && filtertask.parentTaskName !== '' && \r\n                    (item.parentTask === null || item.parentTask === undefined || item.parentTask.parentTaskName === '')){\r\n                    return false;\r\n                }\r\n                if (filtertask.startDate && item.startDate.toLowerCase().indexOf(filtertask.startDate.toLowerCase()) === -1){\r\n                    return false;\r\n                }\r\n                if (filtertask.endDate && item.endDate.toLowerCase().indexOf(filtertask.endDate.toLowerCase()) === -1){\r\n                    return false;\r\n                } \r\n                if (filtertask.priorityFrom && item.priority && parseInt(item.priority) < parseInt(filtertask.priorityFrom)){\r\n                    return false;\r\n                }\r\n                if (filtertask.priorityTo && item.priority && parseInt(item.priority) > parseInt(filtertask.priorityTo)){\r\n                    return false;\r\n                }\r\n                return true;\r\n           })\r\n        }\r\n        else{\r\n            return items;\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport 'rxjs/add/observable/throw';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport { Observable } from 'rxjs/Observable';  \r\nimport { Headers, RequestOptions } from '@angular/http';\r\nimport { Config } from '../env/index';\r\nimport { RouterModule , Router } from '@angular/router';\r\nimport {User} from '../userlist/user';\r\n\r\n@Injectable()\r\nexport class appService {\r\n  \r\n    updatetask : any = {};\r\n    \r\n    constructor(private http: Http, private router : Router) {\r\n\r\n    } \r\n\r\n    getTasks(): Observable<string[]> {\r\n        let headers = new Headers({ 'Accept': '*/*', 'Content-Type':'application/json'});\r\n        let options = new RequestOptions({ headers: headers });\r\n        return this.http.get(Config.API+ \"/api/tasks\", options)\r\n                        .map((res: Response) => res.json())\r\n                        .catch(this.handleErrorNoChange.bind(this));\r\n    }\r\n\r\n    addTask(inputParam : {}): Observable<string[]> {\r\n        let headers = new Headers({ 'Accept': '*/*', 'Content-Type':'application/json' });\r\n        let options = new RequestOptions({ headers: headers });\r\n        return this.http.post(Config.API+ \"api/tasks\", inputParam, options)\r\n                        .map((res: Response) => res.json())\r\n                        .catch(this.handleErrorNoChange.bind(this));\r\n    }\r\n\r\n    editTask(inputParam : {}, taskId : string): Observable<string[]> {\r\n        let headers = new Headers({ 'Accept': '*/*', 'Content-Type':'application/json' });\r\n        let options = new RequestOptions({ headers: headers });\r\n        return this.http.put(Config.API+ \"api/tasks/\" + taskId, inputParam, options)\r\n                        .map((res: Response) => res.json())\r\n                        .catch(this.handleErrorNoChange.bind(this));\r\n    }\r\n\r\n    deleteTask(taskId : string): Observable<string[]> {\r\n        let headers = new Headers({ 'Accept': '*/*', 'Content-Type':'application/json' });\r\n        let options = new RequestOptions({ headers: headers });\r\n        return this.http.delete(Config.API+ \"api/tasks/\"+ taskId, options)\r\n                        .map((res: Response) => res.json())\r\n                        .catch(this.handleErrorNoChange.bind(this));\r\n    }\r\n\r\n    private handleErrorNoChange (error: any) {\r\n        let errMsg = (error.message) ? error.message :\r\n        error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n        console.log('Error handleErrorNoChange kytpp-service: ' + error);\r\n        return Observable.throw(errMsg);\r\n    }\r\n\r\n    getUSers(): Observable<any> {\r\n        const headers = new Headers({ 'Accept': '*/*', 'Content-Type': 'application/json' });\r\n        const options = new RequestOptions({ headers: headers });\r\n        return this.http.get(`${Config.API}/api/users`, options)\r\n            .map(res => res.json())\r\n            .catch(this.handleErrorNoChange.bind(this))\r\n    }\r\n\r\n    addUser(user: User) {\r\n        const headers = new Headers({ 'Accept': '*/*', 'Content-Type': 'application/json' });\r\n        const options = new RequestOptions({ headers: headers });\r\n        this.http.put\r\n        return this.http.put(`${Config.API}/api/user${user.id}`, user)\r\n            .map(res => res.json())\r\n            .catch(this.handleErrorNoChange.bind(this));\r\n    }\r\n\r\n}\r\n","export * from './app.service';","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { UpdateTaskComponent } from './updatetask.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild([\r\n      { path: '', component: UpdateTaskComponent },\r\n      { path: 'addtask', component: UpdateTaskComponent },\r\n      { path: 'edittask', component: UpdateTaskComponent }\r\n    ])\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class UpdateTaskRoutingModule { }\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"row my-3 p-3 bg-white rounded box-shadow\\\">\\r\\n    <div class=\\\"col-xs-12 col-sm-2 col-md-2\\\"></div>\\r\\n    <div class=\\\"col-xs-12 col-sm-8 col-md-8\\\">\\r\\n            <form #updateTaskForm=\\\"ngForm\\\" method=\\\"post\\\" (ngSubmit)=\\\"updateTask(task)\\\" novalidate >\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label for=\\\"taskName\\\" class=\\\"col-sm-2 col-form-label\\\">Project</label>\\r\\n                    <div class=\\\"col-sm-10\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"project\\\" maxlength=\\\"50\\\" required name=\\\"taskName\\\" #projectName=\\\"ngModel\\\" [(ngModel)]=\\\"task.projectName\\\" placeholder=\\\"Enter the project name\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label for=\\\"taskName\\\" class=\\\"col-sm-2 col-form-label\\\">Task Name</label>\\r\\n                    <div class=\\\"col-sm-10\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"taskName\\\" maxlength=\\\"50\\\" required name=\\\"taskName\\\" #taskName=\\\"ngModel\\\" [(ngModel)]=\\\"task.taskName\\\" placeholder=\\\"Enter the Task Name\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label for=\\\"priority\\\" class=\\\"col-sm-2 col-form-label\\\">Priority</label>\\r\\n                    <div class=\\\"col-sm-9\\\">\\r\\n                        <div class=\\\"pt-2\\\">\\r\\n                                <input type=\\\"range\\\" min=\\\"1\\\" max=\\\"30\\\" name=\\\"priority\\\" #priority=\\\"ngModel\\\" [(ngModel)]=\\\"task.priority\\\" class=\\\"slider\\\" id=\\\"priority\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-1\\\">\\r\\n                        <div class=\\\"pt-2\\\">\\r\\n                            {{task.priority}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label for=\\\"parentTask\\\" class=\\\"col-sm-2 col-form-label\\\">Parent Task</label>\\r\\n                    <div class=\\\"col-sm-10\\\">\\r\\n                        <input id=\\\"parentTask\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"parentTaskId\\\" [ngbTypeahead]=\\\"parentTaskSearch\\\" [ngModel]=\\\"task.parentTaskName\\\"\\r\\n                        (focus)=\\\"focus$.next($event.target.value)\\\" (click)=\\\"click$.next($event.target.value)\\\" [resultFormatter]=\\\"formatter\\\" \\r\\n                         (selectItem)=\\\"selectedParentTaskItem($event)\\\" (keydown)=clearParentId($event) #instance=\\\"ngbTypeahead\\\" placeholder=\\\"Select a Parent Task\\\"/>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label for=\\\"startDate\\\" class=\\\"col-sm-2 col-form-label\\\">Start & End Date</label>\\r\\n                    <div class=\\\"col-sm-10\\\">\\r\\n                        <ngb-datepicker #dp (select)=\\\"onDateSelection($event)\\\" [displayMonths]=\\\"2\\\" [dayTemplate]=\\\"t\\\" outsideDays=\\\"hidden\\\">\\r\\n                        </ngb-datepicker>\\r\\n                        <ng-template #t let-date let-focused=\\\"focused\\\">\\r\\n                          <span class=\\\"custom-day\\\"\\r\\n                                [class.focused]=\\\"focused\\\"\\r\\n                                [class.range]=\\\"isRange(date)\\\"\\r\\n                                [class.faded]=\\\"isHovered(date) || isInside(date)\\\"\\r\\n                                (mouseenter)=\\\"hoveredDate = date\\\"\\r\\n                                (mouseleave)=\\\"hoveredDate = null\\\">\\r\\n                            {{ date.day }}\\r\\n                          </span>\\r\\n                        </ng-template>\\r\\n                        <hr/>\\r\\n                        Start Date: <span class=\\\"text-primary\\\">{{convertDateJsonToString(fromDate)}}</span><br/>\\r\\n                        End Date: <span class=\\\"text-primary\\\">{{convertDateJsonToString(toDate)}}</span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                        <label for=\\\"taskName\\\" class=\\\"col-sm-2 col-form-label\\\">User</label>\\r\\n                        <div class=\\\"col-sm-10\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"project\\\" maxlength=\\\"50\\\" required name=\\\"user\\\" #projectName=\\\"ngModel\\\" [(ngModel)]=\\\"task.user\\\" placeholder=\\\"User\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <div class=\\\"col-sm-2 col-form-label\\\"></div>\\r\\n                    <div class=\\\"col-sm-10 row\\\">\\r\\n                            <div aria-live=\\\"assertive\\\" class=\\\"mx-3\\\">\\r\\n                                <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!errorShow\\\" role=\\\"alert\\\">\\r\\n                                    {{errorMessage}}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        <div class=\\\"input-group\\\">\\r\\n                            <div *ngIf=\\\"flow === 'addtask'\\\">\\r\\n                                    <button type=\\\"submit\\\" class=\\\"btn btn-success mx-3\\\" [disabled]=\\\"(task.taskName === '' || fromDate === null || toDate === null)\\\">Add Task</button>\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-info mx-5\\\" (click)=resetButton()>Reset</button>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"flow === 'updatetask'\\\">\\r\\n                                    <button type=\\\"submit\\\" class=\\\"btn btn-success mx-3\\\" [disabled]=\\\"(task.taskName === '' || fromDate === null || toDate === null)\\\">Update</button>\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-info mx-5\\\" (click)=viewTaskScreen()>Cancel</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form> \\r\\n    </div>\\r\\n    <div class=\\\"col-xs-12 col-sm-2 col-md-2\\\"></div>\\r\\n</div>\\r\\n<button type=\\\"button\\\" id=\\\"submitModalOpener\\\" class=\\\"btn btn-primary\\\" [hidden]=\\\"true\\\" data-toggle=\\\"modal\\\" data-target=\\\"#submitModal\\\">\\r\\n</button>\\r\\n\\r\\n<!-- The Modal -->\\r\\n<div class=\\\"modal fade\\\" role=\\\"dialog\\\" id=\\\"submitModal\\\" tabindex=\\\"-1\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <!-- Modal Header -->\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h4 class=\\\"modal-title\\\">{{modalHeading}}</h4>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n        </div>\\r\\n        <!-- Modal body -->\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          {{modalBody}}\\r\\n        </div>\\r\\n        <!-- Modal footer -->\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" *ngIf=\\\"flow === 'addtask'\\\" data-dismiss=\\\"modal\\\" (click)=resetButton()>Back To Add Task</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=viewTaskScreen()>Navigate to View Task</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n<div [hidden]=\\\"!screenLoader\\\" class=\\\"text-align-center\\\"> \\r\\n\\t<div class=\\\"modal-backdropP\\\"></div>\\r\\n\\t<div class=\\\"modalP\\\">\\r\\n\\t\\t<div id=\\\"fountainG\\\">\\r\\n\\t\\t\\t<div id=\\\"fountainG_1\\\" class=\\\"fountainG\\\"></div>\\r\\n\\t\\t\\t<div id=\\\"fountainG_2\\\" class=\\\"fountainG\\\"></div>\\r\\n\\t\\t\\t<div id=\\\"fountainG_3\\\" class=\\\"fountainG\\\"></div>\\r\\n\\t\\t\\t<div id=\\\"fountainG_4\\\" class=\\\"fountainG\\\"></div>\\r\\n\\t\\t\\t<div id=\\\"fountainG_5\\\" class=\\\"fountainG\\\"></div>\\r\\n\\t\\t\\t<div id=\\\"fountainG_6\\\" class=\\\"fountainG\\\"></div>\\r\\n\\t\\t\\t<div id=\\\"fountainG_7\\\" class=\\\"fountainG\\\"></div>\\r\\n\\t\\t\\t<div id=\\\"fountainG_8\\\" class=\\\"fountainG\\\"></div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","import { Component, OnInit, Inject, ViewEncapsulation, OnDestroy, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgForm } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DOCUMENT } from '@angular/platform-browser';\r\nimport { NgbTypeahead, NgbTypeaheadSelectItemEvent,\r\n  NgbDatepicker, NgbDatepickerConfig, NgbDate, NgbCalendar, NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\r\nimport { Observable, Subject, merge} from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, filter, map} from 'rxjs/operators';\r\nimport { appService } from '../service';\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n\r\n  selector: 'app-updatetask',\r\n  templateUrl: 'updatetask.component.html',\r\n  styleUrls: ['updatetask.component.css']\r\n})\r\nexport class UpdateTaskComponent implements OnInit, OnDestroy {\r\n\r\n  @ViewChild('instance') instance: NgbTypeahead;\r\n  focus$ = new Subject<string>();\r\n  click$ = new Subject<string>();\r\n  task: any = {};\r\n  hoveredDate: NgbDate;\r\n  fromDate: NgbDate;\r\n  toDate: NgbDate;\r\n  calendarToday: NgbCalendar;\r\n  alltaskList: any = [];\r\n  errorShow = false;\r\n  screenLoader = false;\r\n  errorMessage = '';\r\n  modalHeading = '';\r\n  modalBody = '';\r\n  flow = 'addtask';\r\n  selectedParentTaskObj: any = {};\r\n\r\n  constructor(calendar: NgbCalendar, config: NgbDatepickerConfig, public router: Router, private appService : appService) {\r\n    this.calendarToday = calendar;\r\n    if (this.appService.updatetask !== null){\r\n      this.flow = 'updatetask';\r\n    }\r\n    if (this.flow === 'addtask') {\r\n      this.task = {\r\n        taskName: '',\r\n        priority: '15',\r\n        parentTaskId: '',\r\n        parentTaskName: '',\r\n        startDate: new Date(),\r\n        endDate: new Date()\r\n      };\r\n      this.fromDate = calendar.getToday();\r\n      this.toDate = calendar.getNext(calendar.getToday(), 'd', 10);\r\n    }\r\n\r\n    if(this.flow === 'updatetask'){\r\n      var edittask = this.appService.updatetask;\r\n      this.selectedParentTaskObj = edittask.parentTask !== null ? edittask.parentTask : null;\r\n      this.task = {\r\n        \"taskName\":edittask.taskName,\r\n        \"priority\":edittask.priority,\r\n        \"parentTaskId\":edittask.parentTask !== null ? edittask.parentTask.parentId : '',\r\n        \"parentTaskName\":edittask.parentTask !== null ? edittask.parentTask.parentTaskName : '',\r\n        \"startDate\":new Date(),\r\n        \"endDate\":new Date()\r\n      };\r\n      this.fromDate = NgbDate.from(this.constructDateFromService(edittask.startDate));\r\n      this.toDate = NgbDate.from(this.constructDateFromService(edittask.endDate));\r\n    }\r\n\r\n    const currentDate = new Date();\r\n    config.minDate = {year:currentDate.getFullYear(), month:currentDate.getMonth()+1, day: currentDate.getDate()};\r\n    config.maxDate = {year: 2099, month: 12, day: 31};\r\n    config.outsideDays = 'hidden';\r\n\r\n    this.screenLoader = false;\r\n    appService.getTasks().subscribe((data :any) => {\r\n      this.alltaskList = data;\r\n      console.log(this.alltaskList);\r\n      this.screenLoader = false;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.task = {};\r\n  }\r\n\r\n  formatter = (value: any) => value.parentTask.parentTaskName || '';\r\n\r\n  updateTask(task: any){\r\n    var parentTaskNameVal = jQuery(\"#parentTask\").val();\r\n    this.errorShow = false;\r\n    this.errorMessage = '';\r\n    if(parentTaskNameVal !== '' && this.task.parentTaskId === ''){\r\n      this.errorShow = true;\r\n      this.errorMessage = 'Select Parent Task from the list available. Either the task name is edited or you have typed a custom task name.';\r\n    }else{\r\n      if(this.flow === 'addtask'){\r\n        var submitAddTask = {};\r\n        if(this.task.parentTaskId === '' || this.task.parentTaskId === null || this.task.parentTaskId === undefined){\r\n          submitAddTask = {\r\n            \"taskName\": this.task.taskName,\r\n            \"startDate\": this.convertDateJsonToString(this.fromDate),\r\n            \"endDate\": this.convertDateJsonToString(this.toDate),\r\n            \"priority\": this.task.priority,\r\n            \"status\": \"A\"\r\n          };\r\n        }else{\r\n          submitAddTask = {\r\n            \"taskName\": this.task.taskName,\r\n            \"startDate\": this.convertDateJsonToString(this.fromDate),\r\n            \"endDate\": this.convertDateJsonToString(this.toDate),\r\n            \"priority\": this.task.priority,\r\n            \"parentId\": this.task.parentTaskId === '' ? null: this.task.parentTaskId\r\n          };\r\n        }\r\n        \r\n        this.screenLoader = true;\r\n        this.appService.addTask(submitAddTask).subscribe(\r\n          (data: any) => {\r\n            this.screenLoader = false;\r\n            this.modalHeading = 'Yeah :-)';\r\n            this.modalBody = 'Task Added Successfully';\r\n            document.getElementById(\"submitModalOpener\").click();\r\n          },\r\n          (err: any) => {\r\n              this.screenLoader = false;\r\n              this.modalHeading = 'Oh No !!!';\r\n              this.modalBody = 'Unexpected error occured during Add Task. Please try after some time.';\r\n              document.getElementById(\"submitModalOpener\").click();        \r\n            }\r\n          );\r\n      }\r\n      if(this.flow === 'updatetask'){\r\n        var submitUpdateTask = {\r\n          \"id\": this.appService.updatetask.id,\r\n          \"taskName\": this.task.taskName,\r\n          \"startDate\": this.convertDateJsonToString(this.fromDate),\r\n          \"endDate\": this.convertDateJsonToString(this.toDate),\r\n          \"priority\": this.task.priority,\r\n          \"parentId\": this.selectedParentTaskObj.parentId\r\n        };\r\n        this.screenLoader = true;\r\n        this.appService.editTask(submitUpdateTask, this.appService.updatetask.id).subscribe(\r\n          (data: any) => {\r\n            this.screenLoader = false;\r\n            this.modalHeading = 'Yeah :-)';\r\n            this.modalBody = 'Task Updated Successfully';\r\n            document.getElementById(\"submitModalOpener\").click();\r\n          },\r\n          (err: any) => {\r\n              this.screenLoader = false;\r\n              this.modalHeading = 'Oh No !!!';\r\n              this.modalBody = 'Unexpected error occured during Update Task. Please try after some time.';\r\n              document.getElementById(\"submitModalOpener\").click();        \r\n            }\r\n          );\r\n      }\r\n    }\r\n  }\r\n\r\n  parentTaskSearch = (text$: Observable<string>) => {\r\n    var parentTasks =[];\r\n    const debouncedText$ = text$.pipe(debounceTime(200), distinctUntilChanged());\r\n    const clicksWithClosedPopup$ = this.click$.pipe(filter(() => !this.instance.isPopupOpen()));\r\n    const inputFocus$ = this.focus$;\r\n    return merge(debouncedText$, inputFocus$, clicksWithClosedPopup$).pipe(\r\n      map(term => (term === '' ? this.alltaskList : \r\n      this.alltaskList.filter(v => v.parentTask.parentTaskName.toLowerCase().indexOf(term.toLowerCase()) > -1))\r\n      .slice(0, 10))\r\n    );\r\n  }\r\n\r\n  selectedParentTaskItem(event: NgbTypeaheadSelectItemEvent): void {\r\n    event.preventDefault();\r\n    this.selectedParentTaskObj = event.item.parentTask;\r\n    jQuery(\"#parentTask\").val(event.item.parentTask.parentTaskName);\r\n    this.task.parentTaskId = event.item.parentTask.parentId;\r\n  }\r\n\r\n  clearParentId(event){\r\n    if (event.key !== \"Enter\") {\r\n      this.task.parentTaskId = \"\";\r\n      this.selectedParentTaskObj = null;\r\n    }\r\n  }\r\n\r\n  constructDateFromService(datestring: string){\r\n    var res = datestring.split(\"/\");\r\n    const date: NgbDateStruct = { day: parseInt(res[0]), month: parseInt(res[1]), year: parseInt(res[2]) };\r\n    return date;\r\n  }\r\n\r\n  resetButton(){\r\n    this.task = {\r\n      \"taskName\":\"\",\r\n      \"priority\":\"15\",\r\n      \"parentTaskId\":\"\",\r\n      \"parentTaskName\":\"\",\r\n      \"startDate\":new Date(),\r\n      \"endDate\":new Date()\r\n    };\r\n    this.fromDate = this.calendarToday.getToday();\r\n    this.toDate = this.calendarToday.getNext(this.calendarToday.getToday(), 'd', 10);\r\n    jQuery(\"#parentTask\").val(\"\");\r\n  }\r\n  \r\n  viewTaskScreen(){\r\n    document.getElementById(\"view-task\").click();\r\n  }\r\n\r\n  /* Datepicker functions*/\r\n  onDateSelection(date: NgbDate) {\r\n    if (!this.fromDate && !this.toDate) {\r\n      this.fromDate = date;\r\n    } else if (this.fromDate && !this.toDate && date.after(this.fromDate)) {\r\n      this.toDate = date;\r\n    } else {\r\n      this.toDate = null;\r\n      this.fromDate = date;\r\n    }\r\n  }\r\n\r\n  isHovered(date: NgbDate) {\r\n    return this.fromDate && !this.toDate && this.hoveredDate && date.after(this.fromDate) && date.before(this.hoveredDate);\r\n  }\r\n\r\n  isInside(date: NgbDate) {\r\n    return date.after(this.fromDate) && date.before(this.toDate);\r\n  }\r\n\r\n  isRange(date: NgbDate) {\r\n    return date.equals(this.fromDate) || date.equals(this.toDate) || this.isInside(date) || this.isHovered(date);\r\n  }\r\n\r\n  convertDateJsonToString(json: any){\r\n    if(json !== undefined && json !== null){\r\n      return json.day + '/' + json.month + '/' + json.year;\r\n    }\r\n  }\r\n\r\n  getParentTasks(tasks: any){\r\n    for (let item of tasks){\r\n      return item.parenttask.parenttaskname;\r\n   }\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { appService } from '../service'; \r\nimport { UpdateTaskComponent } from './updatetask.component';\r\nimport { UpdateTaskRoutingModule } from './updatetask-routing.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgbModal, NgbModule, NgbTypeaheadModule, NgbDatepicker} from '@ng-bootstrap/ng-bootstrap';\r\nimport { HttpClientModule } from '@angular/common/http'; \r\nimport { HttpModule } from '@angular/http';\r\n\r\n@NgModule({\r\n  imports: [UpdateTaskRoutingModule, FormsModule, CommonModule, NgbModule.forRoot(), NgbTypeaheadModule.forRoot()],\r\n  declarations: [UpdateTaskComponent],\r\n  exports: [UpdateTaskComponent, FormsModule],\r\n  providers: [appService]\r\n})\r\n\r\nexport class UpdateTaskModule { \r\n\r\n}","module.exports = \"<div class=\\\"row my-3 p-3 bg-white rounded box-shadow\\\">\\n    <div class=\\\"col-xs-12 col-sm-2 col-md-2\\\"></div>\\n    <div class=\\\"col-md-12\\\">\\n        <h3>\\n            Add User\\n        </h3>\\n        <form [formGroup]=\\\"userForm\\\">\\n            <div class=\\\"form-group row\\\">\\n                <label for=\\\"firstName\\\" class=\\\"col-sm-2 col-form-label\\\">First Name</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" maxlength=\\\"50\\\" formControlName=\\\"firstName\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n                <label for=\\\"lastName\\\" class=\\\"col-sm-2 col-form-label\\\">Last Name</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\"  maxlength=\\\"50\\\" formControlName=\\\"lastName\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n                <label for=\\\"id\\\" class=\\\"col-sm-2 col-form-label\\\">ID</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" maxlength=\\\"50\\\" formControlName=\\\"id\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n                    <div class=\\\"col-sm-2 col-form-label\\\"></div>\\n                    <div class=\\\"col-sm-10 row\\\">\\n                        <div class=\\\"input-group\\\">\\n                            <div>\\n                                    <button type=\\\"submit\\\" class=\\\"btn btn-success mx-3\\\">Update</button>\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-info mx-5\\\">Cancel</button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n        </form>\\n    </div>\\n</div>\\n<div class=\\\"row my-3 p-3 bg-white rounded box-shadow\\\">\\n    <div class=\\\"col-xs-12 col-sm-2 col-md-2\\\"></div>\\n    <div class=\\\"col-md-12\\\">\\n        <h3>Users List</h3>\\n        <user-list></user-list>\\n    </div>\\n</div>\"","import { Component, OnInit, Inject, ViewEncapsulation, OnDestroy, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgForm, FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { Observable, Subject, merge} from 'rxjs';\nimport { appService } from '../service/app.service'; \nimport { User } from './user';\n\n\n@Component({\n    selector: \"add-user-component\",\n    templateUrl: \"./add-user.component.html\"\n})\nexport class AddUserComponent implements OnInit {\n    userForm: FormGroup;\n    user: User;\n    constructor(private fb: FormBuilder) {\n\n    }\n    ngOnInit(): void {\n        this.userForm = this.fb.group({\n            'firstName': ['', Validators.required],\n            'lastName': ['', Validators.required],\n            'id': ['', Validators.required]\n        })\n        this.userForm.valueChanges.subscribe(console.log)\n    }\n\n}","module.exports = \"<ul>\\n    <li *ngFor=\\\"let user of users\\\">\\n        <span>\\n            First Name: {{user.firstName}}\\n        </span>\\n        <span>\\n            Last Name: {{user.lastName}}\\n        </span>\\n    </li>\\n</ul>\"","import { Component, OnInit, Inject, ViewEncapsulation, OnDestroy, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgForm, FormBuilder, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { Observable, Subject, merge} from 'rxjs';\nimport { User } from './user';\nimport { appService } from '../service';\n\n\n@Component({\n    selector: \"user-list\",\n    templateUrl: \"./user-list.component.html\"\n})\nexport class UserListComponent implements OnInit {\n    users: User[];\n\n    constructor(private readonly appservice: appService){\n\n    }\n\n    ngOnInit(): void {\n        this.loadUsers();\n    }\n\n    loadUsers(): void {\n        this.appservice.getUSers()\n            .subscribe(users => {\n                this.users = users;\n            });\n    }\n}","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {  AddUserComponent } from './add-user.component';\nimport {  UserListComponent } from './user-list.component';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      { path: '', component:  AddUserComponent},\n      { path: 'adduser', component: AddUserComponent },\n      { path: 'users', component: UserListComponent }\n    ])\n  ],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { appService } from '../service'; \nimport { AddUserComponent } from './add-user.component';\nimport { UserListComponent } from './user-list.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UserRoutingModule } from './user-routing.module';\n\n@NgModule({\n    imports: [UserRoutingModule, FormsModule, CommonModule, ReactiveFormsModule],\n    declarations: [ UserListComponent, AddUserComponent ],\n    exports: [UserListComponent, AddUserComponent],\n    providers: [appService]\n})\nexport class UserModule {\n\n}","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ViewTaskComponent } from './viewtask.component';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      { path: 'viewtask', component: ViewTaskComponent }\n    ])\n  ],\n  exports: [RouterModule]\n})\nexport class ViewTaskRoutingModule { }\n","module.exports = \"th, label, .h6{\\n    font-weight: 500 !important;\\n    color: #495057 !important;\\n}\\n\\n\"","module.exports = \"<form #viewTaskForm=\\\"ngForm\\\" novalidate >\\n<div class=\\\"row my-3 p-3 bg-white rounded box-shadow\\\">\\n        <br/><br/>    \\n        <div class=\\\"row col-xs-12 col-sm-12 col-md-12\\\">\\n            <div class=\\\"h6 mx-3\\\">Enter the field to Search for your task.</div>\\n        </div>\\n        <hr/>\\n        <br/><br/>\\n        <div class=\\\"row col-xs-12 col-sm-12 col-md-12\\\">\\n            <div class=\\\"form-group col-xs-12 col-sm-6 col-md-6\\\">\\n                <label for=\\\"taskName\\\">Task Name</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"taskName\\\" maxlength=\\\"50\\\" name=\\\"taskName\\\" #taskName=\\\"ngModel\\\" [(ngModel)]=\\\"task.taskName\\\">\\n            </div>\\n            <div class=\\\"form-group col-xs-12 col-sm-6 col-md-6\\\">\\n                <label for=\\\"parentTaskName\\\">Parent Task Name</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"parentTaskName\\\" maxlength=\\\"50\\\" name=\\\"parentTaskName\\\" #parentTaskName=\\\"ngModel\\\" [(ngModel)]=\\\"task.parentTaskName\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"row col-xs-12 col-sm-12 col-md-12\\\">\\n            <div class=\\\"form-group col-xs-12 col-sm-3 col-md-3\\\">\\n                <label for=\\\"priorityFrom\\\">Priority From</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"priorityFrom\\\" maxlength=\\\"2\\\" name=\\\"priorityFrom\\\" #priorityFrom=\\\"ngModel\\\" [(ngModel)]=\\\"task.priorityFrom\\\">\\n            </div>\\n            <div class=\\\"form-group col-xs-12 col-sm-3 col-md-3\\\">\\n                <label for=\\\"priorityTo\\\">Priority To</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"priorityTo\\\" maxlength=\\\"2\\\" name=\\\"priorityTo\\\" #priorityTo=\\\"ngModel\\\" [(ngModel)]=\\\"task.priorityTo\\\">\\n            </div>\\n            <div class=\\\"form-group col-xs-12 col-sm-3 col-md-3\\\">\\n                <label for=\\\"startDate\\\">Start Date</label>\\n                <div class=\\\"input-group\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"dd/mm/yyyy\\\" id=\\\"startDate\\\" [readonly]=\\\"true\\\"\\n                            name=\\\"startDate\\\" [(ngModel)]=\\\"task.startDate\\\" ngbDatepicker #startDate=\\\"ngbDatepicker\\\" (dateSelect)=\\\"onDateSelectPicker($event,'start')\\\"/>\\n                    <div class=\\\"input-group-append\\\">\\n                        <button class=\\\"btn btn-outline-secondary fa fa-calendar\\\" (click)=\\\"startDate.toggle()\\\" type=\\\"button\\\"></button>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group col-xs-12 col-sm-3 col-md-3\\\">\\n                <label for=\\\"endDate\\\">End Date</label>\\n                <div class=\\\"input-group\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"dd/mm/yyyy\\\" id=\\\"endDate\\\" [readonly]=\\\"true\\\"\\n                            name=\\\"endDate\\\" [(ngModel)]=\\\"task.endDate\\\" ngbDatepicker #endDate=\\\"ngbDatepicker\\\" (dateSelect)=\\\"onDateSelectPicker($event,'end')\\\"/>\\n                    <div class=\\\"input-group-append\\\">\\n                        <button class=\\\"btn btn-outline-secondary fa fa-calendar\\\" (click)=\\\"endDate.toggle()\\\" type=\\\"button\\\"></button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div> \\n        <div class=\\\"row col-xs-12 col-sm-12 col-md-12\\\">\\n                <div class=\\\"input-group\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-info mx-3\\\" (click)=resetButton()>Reset Search Form</button>\\n                </div>\\n        </div> \\n        <div class=\\\"row col-xs-12 col-sm-12 col-md-12\\\">\\n                <table class=\\\"table table-bordered mx-3 my-4\\\">\\n                    <thead class=\\\"thead-light\\\">\\n                        <tr>\\n                            <th scope=\\\"col\\\">Task Name</th>\\n                            <th scope=\\\"col\\\">Parent Task Name</th>\\n                            <th scope=\\\"col\\\">Priority</th>\\n                            <th scope=\\\"col\\\">Start Date</th>\\n                            <th scope=\\\"col\\\">End Date</th>\\n                            <th class=\\\"actionWidth\\\" scope=\\\"col\\\">Action</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let item of alltaskList | taskSearchPipe : task\\\">\\n                            <td>{{item.taskName}}</td>\\n                            <td>{{getParentTaskName(item)}}</td>\\n                            <td>{{item.priority}}</td>\\n                            <td>{{item.startDate}}</td>\\n                            <td>{{item.endDate}}</td>\\n                            <td class=\\\"actionWidth\\\">\\n                                <!-- <div *ngIf=\\\"item.status === 'A'\\\"> -->\\n                                <div>\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=editTask(item)>Edit Task</button>\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-secondary mx-2\\\" (click)=endTask(item.id)>End Task</button>\\n                                </div>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n        </div> \\n</div>\\n\\n\\n<button type=\\\"button\\\" id=\\\"endTaskModalOpener\\\" class=\\\"btn btn-primary\\\" [hidden]=\\\"true\\\" data-toggle=\\\"modal\\\" data-target=\\\"#endTaskModal\\\">\\n</button>\\n\\n<!-- The Modal -->\\n<div class=\\\"modal fade\\\" role=\\\"dialog\\\" id=\\\"endTaskModal\\\" tabindex=\\\"-1\\\">\\n    <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\">\\n        <!-- Modal Header -->\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">{{modalHeading}}</h4>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        </div>\\n        <!-- Modal body -->\\n        <div class=\\\"modal-body\\\">\\n          {{modalBody}}\\n        </div>\\n        <!-- Modal footer -->\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=backToViewTask()>Back To View Task</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit, Inject, ViewEncapsulation, OnDestroy, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { NgbTypeahead, NgbTypeaheadSelectItemEvent, NgbDatepicker, NgbDatepickerConfig, NgbDate, NgbCalendar} from '@ng-bootstrap/ng-bootstrap';\nimport { Observable, Subject, merge} from 'rxjs';\nimport { debounceTime, distinctUntilChanged, filter, map} from 'rxjs/operators';\nimport { appService } from '../service/index';\ndeclare var jQuery:any;\n\n@Component({\n  selector: 'app-viewtask',\n  templateUrl: 'viewtask.component.html',\n  styleUrls: ['viewtask.component.css']\n})\nexport class ViewTaskComponent implements OnInit, OnDestroy {\n\n  calendarToday: NgbCalendar\n  alltaskList : any = [];\n  task : any = {};\n  screenLoader : boolean = false;\n  modalHeading : string = '';\n  modalBody : string = '';\n\n  constructor(calendar: NgbCalendar, config: NgbDatepickerConfig, public router: Router, public appService : appService) {\n\n    this.screenLoader = true;\n    this.appService.updatetask = null;\n    appService.getTasks().subscribe((data :any) => {\n      this.alltaskList = data;\n      this.screenLoader = false;\n    });\n  }\n\n  ngOnInit() {\n    \n  }\n\n  ngOnDestroy() {\n    \n  }\n\n  onDateSelectPicker(date: NgbDate, field: string){\n    if(field === 'start'){\n      this.task.startDate = this.convertDateJsonToString(this.task.startDate);\n      setTimeout(()=>{\n        jQuery(\"#startDate\").val(this.task.startDate);\n      },50);\n    }else if(field === 'end'){\n      this.task.endDate = this.convertDateJsonToString(this.task.endDate);\n      setTimeout(()=>{\n        jQuery(\"#endDate\").val(this.task.endDate);\n      },50);\n    }\n  }\n\n  convertDateJsonToString(json: any){\n    if(json !== undefined && json !== null){\n      return json.day + '/' + json.month + '/' + json.year;\n    }\n  }\n\n  getParentTaskName(item: any){\n    var parentTaskName = '';\n    if(item !== null && item !== undefined){\n      if(item.parentTask !== null && item.parentTask !== undefined){\n        parentTaskName = item.parentTask.parentTaskName;\n      }\n    }\n    return parentTaskName;\n  }\n\n  resetButton(){\n    this.task = {\n      \"taskName\":\"\",\n      \"parentTaskName\":\"\",\n      \"priorityFrom\":\"\",\n      \"priorityTo\":\"\",\n      \"startDate\":\"\",\n      \"endDate\":\"\"\n    };\n    jQuery(\"#startDate\").val(\"\");\n    jQuery(\"#endDate\").val(\"\");\n  }\n\n  endTask(taskId: string){\n    this.screenLoader = true;\n    this.appService.deleteTask(taskId).subscribe(\n      (data: any) => {\n        this.screenLoader = false;\n        this.modalHeading = 'Yeah :-)';\n        this.modalBody = 'Task Ended Successfully';\n        document.getElementById(\"endTaskModalOpener\").click();\n      },\n      (err: any) => {\n          this.screenLoader = false;\n          this.modalHeading = 'Oh No !!!';\n          this.modalBody = 'Unexpected error occured during End Task. Please try after some time.';\n          document.getElementById(\"endTaskModalOpener\").click();        \n        }\n      );\n  }\n\n  backToViewTask(){\n    this.screenLoader = true;\n    this.appService.getTasks().subscribe(\n      (data: any) => {\n        this.alltaskList = data;\n        this.screenLoader = false;\n      },\n      (err: any) => {\n          this.screenLoader = false;     \n        }\n      );\n  }\n\n  editTask(task: any){\n    this.appService.updatetask = task;\n    this.router.navigate(['/edittask']);\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { appService } from '../service/index'; \nimport { ViewTaskComponent } from './viewtask.component';\nimport { ViewTaskRoutingModule } from './viewtask-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModal, NgbModule, NgbTypeaheadModule, NgbDatepicker} from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClientModule } from '@angular/common/http'; \nimport { HttpModule } from '@angular/http';\nimport { CommonutilsModule } from '../commonutils.module';\n\n@NgModule({\n  imports: [ViewTaskRoutingModule, FormsModule, CommonModule, NgbModule.forRoot(), NgbTypeaheadModule.forRoot(), CommonutilsModule.forRoot()],\n  declarations: [ViewTaskComponent],\n  exports: [ViewTaskComponent, FormsModule],\n  providers: [appService]\n})\n\nexport class ViewTaskModule { \n\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  API:'http://localhost:9000'\r\n};\r\n\r\n/*\r\n * In development mode, for easier debugging, you can ignore zone related error\r\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\r\n * below file. Don't forget to comment it out in production mode\r\n * because it will have a performance impact when errors are thrown\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}